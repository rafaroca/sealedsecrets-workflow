kind: Service
apiVersion: v1
metadata:
  name: nginx
  namespace: sealedsecrets
spec:
  type: ClusterIP
  selector:
    run: nginx
  ports:
    - protocol: TCP
      port: 80
      name: web
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-dpl
  labels:
    run: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      run: nginx
  template:
    metadata:
      labels:
        run: nginx
    spec:
      containers:
        - image: nginx
          ports:
            - containerPort: 80
              name: http
          name: nginx
          resources: {}
          volumeMounts:
#            - mountPath: /usr/share/nginx/html
#              name: htpasswd
            - mountPath: /etc/nginx
              name: config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
        - name: htpasswd
          configMap:
            name: htpasswd
        - name: config
          configMap:
            name: nginx-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: htpasswd
data:
  index.html: |
    <h1>Hello</h1>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  htpasswd: |
    user1:$apr1$/woC1jnP$KAh0SsVn5qeSMjTtn0E9Q0
    sammy:$apr1$lzxsIfXG$tmCvCfb49vpPFwKGVsuYz.
  nginx.conf: |
    events {}
    http {
      server {
        listen      80;
        server_name example.com;
        root        /usr/share/nginx/html;
        location / {
          auth_basic           "restricted";
          auth_basic_user_file htpasswd;
        }
      }
    }
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx
  namespace: sealedsecrets
  annotations:
spec:
  rules:
    - host: raspberrypi.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name:  nginx
                port:
                  number: 8080

